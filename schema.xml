<?xml version="1.0" encoding="UTF-8" ?>
<!-- 
A minimal schema.xml file for dokuwiki pages 
This file is a heavily culled version of the example schema.xml from the Solr 
distribution. It is mostly language-agnostic.

Please see the original schema.xml for more text tokenization 
options, especially if you want to use stemming or if you want to specialize in 
a language.

-->
<schema name="dokuwiki" version="1.4">

  <types>
    <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

    <!-- A Trie based date field for faster date range queries and date faceting. -->
    <fieldType name="tdate" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>

    <!-- A text field that only splits on whitespace for exact matching of words -->
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      </analyzer>
    </fieldType>

    <!-- A general text field that has reasonable, generic
         cross-language defaults: it tokenizes with StandardTokenizer,
	 removes stop words from case-insensitive "stopwords.txt"
	 (empty by default), and down cases.  At query time only, it
	 also applies synonyms. -->
    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <charFilter class="solr.HTMLStripCharFilterFactory"/>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- lowercases the entire field value, keeping it as a single token.  -->
    <fieldType name="lowercase" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
    </fieldType>

    <!-- A text field that stores lowercased user names -->
    <fieldType name="dw_usernames" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.LowerCaseTokenizerFactory"/>
      </analyzer>
    </fieldType>
    
    <!-- Dokuwiki page id, hierarchical, with name spaces -->
    <fieldType name="page_id" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter=":" replace="/"/>
      </analyzer>
    </fieldType>

    <!-- since fields of this type are by default not stored or indexed,
         any data added to them will be ignored outright.  --> 
    <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />
    
 </types>

 <fields>
   <field name="id" type="string" indexed="true" stored="true" required="true" />
   <field name="idpath" type="page_id" indexed="true" stored="true" required="true" />
   <field name="title" type="text_general" indexed="true" stored="true"/>
   <field name="content" type="text_general" indexed="true" stored="true" termVectors="true" termPositions="true" termOffsets="true"/>
   <field name="abstract" type="text_general" indexed="true" stored="true"/>
   <!-- Store individual heading levels. These can be weighted differently. -->
   <field name="headings1" type="text_general" indexed="true" stored="false" multiValued="true"/>
   <field name="headings2" type="text_general" indexed="true" stored="false" multiValued="true"/>
   <field name="headings3" type="text_general" indexed="true" stored="false" multiValued="true"/>
   <field name="headings4" type="text_general" indexed="true" stored="false" multiValued="true"/>
   <field name="headings5" type="text_general" indexed="true" stored="false" multiValued="true"/>
   <field name="headings6" type="text_general" indexed="true" stored="false" multiValued="true"/>
   <!-- All headings of the document -->
   <field name="headings" type="text_general" indexed="true" stored="true" multiValued="true"/>
   <field name="created" type="tdate" indexed="true" stored="true"/>
   <field name="modified" type="tdate" indexed="true" stored="true"/>
   <field name="creator" type="lowercase" indexed="true" stored="true"/>
   <field name="contributor" type="lowercase" indexed="true" stored="true" multiValued="true"/>
   <field name="keywords" type="text_ws" indexed="true" stored="true"/>
   <field name="references" type="text_general" indexed="true" stored="true" multiValued="true"/>

   <!-- catchall field, containing all other searchable text fields (implemented
        via copyField further on in this schema  -->
   <field name="text" type="text_general" indexed="true" stored="false" multiValued="true"/>
   
 </fields>

 <!-- Field to use to determine and enforce document uniqueness. 
      Unless this field is marked with required="false", it will be a required field
   -->
 <uniqueKey>id</uniqueKey>

 <!-- field for the QueryParser to use when an explicit fieldname is absent -->
 <defaultSearchField>text</defaultSearchField>

 <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
 <solrQueryParser defaultOperator="OR"/>

  <!-- copyField commands copy one field to another at the time a document
        is added to the index.  It's used either to index the same field differently,
        or to add multiple fields to the same field for easier/faster searching.  -->

   <copyField source="content" dest="text"/>
   <copyField source="id" dest="text"/>
   <copyField source="creator" dest="text"/>
   <copyField source="references" dest="text"/>
   <copyField source="id" dest="idpath"/>
   <copyField source="headings1" dest="headings"/>
   <copyField source="headings2" dest="headings"/>
   <copyField source="headings3" dest="headings"/>
   <copyField source="headings4" dest="headings"/>
   <copyField source="headings5" dest="headings"/>
   <copyField source="headings6" dest="headings"/>

</schema>
